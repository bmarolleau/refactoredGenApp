{"id": 0, "prompt_instruction": "translate code from cobol to java\n", "prompt_template": "\n\n## Cobol:\n{}\n## Java:\n{}|\n\n## Cobol:\n{}\n## Java:\n", "vcmap_template": "{}\n\n## Variable Map:\n{}\n\n## Class Map:\n{}\n", "vc_style": "brackets", "nexamples": 2, "model_id": "ibm/granite-20b-code-cobol-v1", "llm_parameters": {"max_new_tokens": 2048, "stop_sequences": ["Input:", "## Cobol"], "decoding_method": "greedy", "truncate_input_tokens": 4096, "random_seed": 111}}
{"id": 1, "cbl_in_ex": "DEMO-TASKA.\n \n * This is prompt example 1 *  \nMOVE 'HELLO WORLD' TO VA-TAB  \nMOVE '45' TO CA-PAYMENT  \n\nIF MAN-BOOKER IS EQUAL TO 24\n EXEC SQL\n   INSERT INTO ADDR\n             ( NUMBER,\n               NAME)\n      VALUES ( :SAN-NUM,\n               :SHAP-VALUE)              \n END-EXEC\n IF SQLCODE NOT EQUAL 0\n   PERFORM TRAN-RATE-INTERVAL\n   EXEC STATEMENT1 END-EXEC\n END-IF\nENDIF\n EXEC SQL\n        SET :SAN-NUM = IDENTITY_VAL_LOCAL() \n END-EXEC \n \n MOVE  SAN-NUM TO PY-RES-INT\n MOVE 25 TO MAN-BOOKER\n\n EXIT.", "vcmap_in_ex": "[[recordBook.retailName.tabValue,  String, VA-TAB, X(4)],\n[markDanson.post.manBooker, String, MAN-BOOKER, X(6)],\n[this.caPayment, int, CA-PAYMENT, X(2)],\n[this.pyResInt, int, PY-RES-INT, 99],\n[this.retail.shapValue, int, SHAP-VALUE, 9(4)]]", "java_in_ex": "void demoTaskA(int sanNum){\n    bookShop markDanson =  new BookShop();\n}", "java_out_ex": "void demoTaskA(int sanNum) {\n    bookShop markDanson =  new BookShop();\n\n    /* This is prompt example 1 */ \n    recordBook.getRetailName().setTabValue(\"HELLO WORLD\");\n    this.setCaPayment(Integer.parseInt(\"45\"));        \n   \n    if (markDanson.getPost().getBookerWinner() == 24) {\n    try {\n        String sql = \"INSERT INTO ADDR(NUMBER, NAME)values(?, ?)\";\n        PreparedStatement ps = JdbcConnection.connection.prepareStatement(sql);\n        ps.setInt(1, sanNum);\n        ps.setString(2, this.retail.getShapValue());\n        ps.executeUpdate();\n        ps.close();\n    }\n    catch(SQLException exception) {\n        tranRateInterval();\n        return;\n    }\n    }\n    try{\n        ResultSet rs =  JdbcConnection.connection.createStatement().executeQuery(\"SELECT IDENTITY_VAL_LOCAL() FROM SYSIBM.SYSDUMMY1\");\n        rs.next();\n        sanNum = rs.getInt(1);\n    }\n    catch(SQLException exception){\n        System.out.println(exception);\n        return;\n    }\n    this.setPyResInt(sanNum);  \n    markDanson.getPost().setBookerWinner(25);      \n}"}
{"id": 2, "cbl_in_ex": "BUZZ-VAL. \n\n* This is prompt example 2 * \n\n IF CAN-BANK-VAL IS EQUAL TO 87\n EXEC SQL\n   INSERT INTO BANK\n             ( NUM,\n               LOCATION)\n      VALUES ( DEFAULT,\n               :SYS-GERM)\n END-EXEC\n IF SQLCODE NOT EQUAL 0   \n   MOVE '10' TO CA-SUM-ASSURED\n   PERFORM PRINT-FUNCTION\n   EXEC STATEMENT2 END-EXEC\n END-IF\nEND-IF\nEXIT.", "vcmap_in_ex": "[[sysGerm, String, SYS-GERM, X(5)],\n[bankVar.canBankVal, int, CAN-BANK-VAL, 9(3)],\n[this.caSumAssured, int, CA-SUM-ASSURED, 99]]", "java_in_ex": "void buzzVal(String caRhNum){        \n    int poll = 0;\n}", "java_out_ex": "void buzzVal(String caRhNum){\n    int poll = 0;\n\n   /* This is prompt example 2 */\n\n   if (bankVar.getCanBankVal() == 87){\n     try {\n        String sql = \"INSERT INTO BANK(LOCATION)values(?)\";\n        PreparedStatement ps = JdbcConnection.connection.prepareStatement(sql, Statement.RETURN_GENERATED_KEYS);\n        ps.setString(1, sysGerm);\n        ps.executeUpdate();\n        ps.close();\n    }\n    catch(SQLException exception) {\n        this.setCaSumAssured(Integer.parseInt(\"10\"));     \n        printFunction();\n        return;\n     } \n   }\n}"}
